# This file should not be modified as it may get changed by the maintainer.
# Add extra configuration files in the extra_config_files directory to override
# the content from this file

# Extra configuration directory where the config files overriding this file
# should be.
extra_config_files: '/etc/wazo-webhookd/conf.d'

debug: false
log_level: info
log_file: /var/log/wazo-webhookd.log
pid_file: /var/run/wazo-webhookd/wazo-webhookd.pid

# Connection info to the authentication server
auth:
  host: localhost
  port: 9497
  verify_certificate: /usr/share/xivo-certs/server.crt
  key_file: /var/lib/wazo-auth-keys/wazo-webhookd-key.yml

# Event bus (AMQP) connection informations
bus:
  username: guest
  password: guest
  host: localhost
  port: 5672
  exchange_name: xivo
  exchange_type: topic

# celery (task queue) connection informations
celery:
    broker: amqp://guest:guest@localhost:5672
    exchange_name: celery-webhookd
    queue_name: celery-webhookd
    worker_pid_file: /var/run/wazo-webhookd/celery-worker.pid
    worker_min: 3
    worker_max: 10

# consul connection informations
consul:
  scheme: https
  host: localhost
  port: 8500
  verify: /usr/share/xivo-certs/server.crt
  token: 'the_one_ring'

# database connection informations
db_uri: postgresql://asterisk:proformatique@localhost/asterisk

hook_max_attempts: 10

# REST API server
rest_api:

  # Listening address
  listen: 0.0.0.0

  # Listening port
  port: 9300

  certificate: /usr/share/xivo-certs/server.crt
  private_key: /usr/share/xivo-certs/server.key

  #CORS configuration. See Flask-CORS documentation for other values.
  cors:

    #Enabled by default
    enabled: True

    #Allow JSON preflight requests
    allow_headers: [Content-Type, X-Auth-Token]

# Service discovery configuration. all time intervals are in seconds
service_discovery:
  # to indicate wether of not to use service discovery, should only be disabled
  # for testing purposes
  enabled: true
  # the address that will be received by other services using service discovery.
  # use "advertise_address: auto" to enable ip address detection based on
  # advertise_address_interface
  advertise_address: auto
  # if advertise_address is "auto" this interface will be used to find the ip
  # address to advertise. ignored otherwise
  advertise_address_interface: eth0
  advertise_port: 9300
  # the number of seconds that consul will wait between 2 ttl messages to mark
  # this service as up
  ttl_interval: 30
  # the time interval before the service sends a new ttl message to consul
  refresh_interval: 27
  # the time interval to detect that the service is running when starting
  retry_interval: 2
  extra_tags: []

enabled_plugins:
  api: true
  config: true
  services: true
  status: true
  subscriptions: true

enabled_services:
  http: True
